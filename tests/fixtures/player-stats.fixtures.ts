import type { PlayerStat, RawPlayerStat } from '../../src/domain/player-stats';
import type { RawFPLElement } from '../../src/types';
import type { ElementTypeId, EventId } from '../../src/types/base.type';

// Raw FPL API response for elements (sample data based on bootstrap-static)
export const rawFPLElementsFixture: RawFPLElement[] = [
  {
    id: 1,
    code: 69140,
    element_type: 1, // GKP
    team: 1, // Arsenal
    now_cost: 50, // 5.0m
    cost_change_start: 0,
    cost_change_event: 0,
    cost_change_event_fall: 0,
    cost_change_start_fall: 0,
    first_name: 'Aaron',
    second_name: 'Ramsdale',
    web_name: 'Ramsdale',
    photo: 'jpg',
    status: 'a',
    selected_by_percent: '3.2',
    total_points: 42,
    points_per_game: '3.8',
    form: '4.2',
    dreamteam_count: 1,
    in_dreamteam: false,
    special: false,
    squad_number: 1,
    news: '',
    news_added: null,
    chance_of_playing_this_round: 100,
    chance_of_playing_next_round: 100,
    value_form: '8.4',
    value_season: '8.4',
    transfers_in: 12543,
    transfers_out: 15432,
    transfers_in_event: 1234,
    transfers_out_event: 1567,
    minutes: 990,
    goals_scored: 0,
    assists: 1,
    clean_sheets: 6,
    goals_conceded: 12,
    own_goals: 0,
    penalties_saved: 1,
    penalties_missed: 0,
    yellow_cards: 2,
    red_cards: 0,
    saves: 45,
    bonus: 3,
    bps: 156,
    influence: '78.2',
    creativity: '12.4',
    threat: '5.1',
    ict_index: '9.6',
    expected_goals: '0.12',
    expected_assists: '0.45',
    expected_goal_involvements: '0.57',
    expected_goals_conceded: '14.2',
  },
  {
    id: 2,
    code: 223340,
    element_type: 2, // DEF
    team: 1, // Arsenal
    now_cost: 65, // 6.5m
    cost_change_start: 5,
    cost_change_event: 0,
    cost_change_event_fall: 0,
    cost_change_start_fall: 0,
    first_name: 'William',
    second_name: 'Saliba',
    web_name: 'Saliba',
    photo: 'jpg',
    status: 'a',
    selected_by_percent: '15.4',
    total_points: 78,
    points_per_game: '6.2',
    form: '5.8',
    dreamteam_count: 3,
    in_dreamteam: true,
    special: false,
    squad_number: 2,
    news: '',
    news_added: null,
    chance_of_playing_this_round: 100,
    chance_of_playing_next_round: 100,
    value_form: '8.9',
    value_season: '12.0',
    transfers_in: 45632,
    transfers_out: 12345,
    transfers_in_event: 5432,
    transfers_out_event: 1234,
    minutes: 1080,
    goals_scored: 2,
    assists: 3,
    clean_sheets: 8,
    goals_conceded: 10,
    own_goals: 0,
    penalties_saved: 0,
    penalties_missed: 0,
    yellow_cards: 3,
    red_cards: 0,
    saves: 0,
    bonus: 12,
    bps: 345,
    influence: '145.6',
    creativity: '89.2',
    threat: '67.8',
    ict_index: '30.2',
    expected_goals: '2.45',
    expected_assists: '2.12',
    expected_goal_involvements: '4.57',
    expected_goals_conceded: '12.5',
  },
  {
    id: 3,
    code: 184003,
    element_type: 3, // MID
    team: 2, // Manchester City
    now_cost: 125, // 12.5m
    cost_change_start: 15,
    cost_change_event: 0,
    cost_change_event_fall: 0,
    cost_change_start_fall: 0,
    first_name: 'Kevin',
    second_name: 'De Bruyne',
    web_name: 'De Bruyne',
    photo: 'jpg',
    status: 'a',
    selected_by_percent: '42.3',
    total_points: 156,
    points_per_game: '8.7',
    form: '7.2',
    dreamteam_count: 8,
    in_dreamteam: false,
    special: false,
    squad_number: 17,
    news: '',
    news_added: null,
    chance_of_playing_this_round: 100,
    chance_of_playing_next_round: 100,
    value_form: '5.8',
    value_season: '12.5',
    transfers_in: 123456,
    transfers_out: 54321,
    transfers_in_event: 12345,
    transfers_out_event: 5432,
    minutes: 1170,
    goals_scored: 8,
    assists: 12,
    clean_sheets: 0,
    goals_conceded: 0,
    own_goals: 0,
    penalties_saved: 0,
    penalties_missed: 1,
    yellow_cards: 4,
    red_cards: 0,
    saves: 0,
    bonus: 28,
    bps: 567,
    influence: '234.5',
    creativity: '189.7',
    threat: '145.8',
    ict_index: '56.9',
    expected_goals: '9.87',
    expected_assists: '14.23',
    expected_goal_involvements: '24.10',
    expected_goals_conceded: '0.0',
  },
  {
    id: 4,
    code: 138956,
    element_type: 4, // FWD
    team: 3, // Liverpool
    now_cost: 135, // 13.5m
    cost_change_start: 20,
    cost_change_event: 0,
    cost_change_event_fall: 0,
    cost_change_start_fall: 0,
    first_name: 'Mohamed',
    second_name: 'Salah',
    web_name: 'Salah',
    photo: 'jpg',
    status: 'a',
    selected_by_percent: '38.7',
    total_points: 187,
    points_per_game: '9.4',
    form: '8.6',
    dreamteam_count: 12,
    in_dreamteam: true,
    special: false,
    squad_number: 11,
    news: '',
    news_added: null,
    chance_of_playing_this_round: 100,
    chance_of_playing_next_round: 100,
    value_form: '6.4',
    value_season: '13.9',
    transfers_in: 234567,
    transfers_out: 87654,
    transfers_in_event: 23456,
    transfers_out_event: 8765,
    minutes: 1260,
    goals_scored: 18,
    assists: 9,
    clean_sheets: 0,
    goals_conceded: 0,
    own_goals: 0,
    penalties_saved: 0,
    penalties_missed: 0,
    yellow_cards: 2,
    red_cards: 0,
    saves: 0,
    bonus: 34,
    bps: 678,
    influence: '287.9',
    creativity: '156.4',
    threat: '234.7',
    ict_index: '67.9',
    expected_goals: '16.45',
    expected_assists: '8.76',
    expected_goal_involvements: '25.21',
    expected_goals_conceded: '0.0',
  },
];

// Mock teams for transformation
export const mockTeamsForPlayerStats = [
  { id: 1, name: 'Arsenal', shortName: 'ARS' },
  { id: 2, name: 'Manchester City', shortName: 'MCI' },
  { id: 3, name: 'Liverpool', shortName: 'LIV' },
];

// Expected transformed player stats (matching domain PlayerStat interface)
export const transformedPlayerStatsFixture: PlayerStat[] = [
  {
    eventId: 3,
    elementId: 1,
    webName: 'Ramsdale',
    elementType: 1,
    elementTypeName: 'GKP',
    teamId: 1,
    teamName: 'Arsenal',
    teamShortName: 'ARS',
    value: 50,
    totalPoints: 42,
    form: '4.2',
    influence: '78.2',
    creativity: '12.4',
    threat: '5.1',
    ictIndex: '9.6',
    expectedGoals: '0.12',
    expectedAssists: '0.45',
    expectedGoalInvolvements: '0.57',
    expectedGoalsConceded: '14.2',
    minutes: 990,
    goalsScored: 0,
    assists: 1,
    cleanSheets: 6,
    goalsConceded: 12,
    ownGoals: 0,
    penaltiesSaved: 1,
    yellowCards: 2,
    redCards: 0,
    saves: 45,
    bonus: 3,
    bps: 156,
    starts: null,
    influenceRank: null,
    influenceRankType: null,
    creativityRank: null,
    creativityRankType: null,
    threatRank: null,
    threatRankType: null,
    ictIndexRank: null,
    ictIndexRankType: null,
    mngWin: null,
    mngDraw: null,
    mngLoss: null,
    mngUnderdogWin: null,
    mngUnderdogDraw: null,
    mngCleanSheets: null,
    mngGoalsScored: null,
  },
  {
    eventId: 3,
    elementId: 2,
    webName: 'Saliba',
    elementType: 2,
    elementTypeName: 'DEF',
    teamId: 1,
    teamName: 'Arsenal',
    teamShortName: 'ARS',
    value: 65,
    totalPoints: 78,
    form: '5.8',
    influence: '145.6',
    creativity: '89.2',
    threat: '67.8',
    ictIndex: '30.2',
    expectedGoals: '2.45',
    expectedAssists: '2.12',
    expectedGoalInvolvements: '4.57',
    expectedGoalsConceded: '12.5',
    minutes: 1080,
    goalsScored: 2,
    assists: 3,
    cleanSheets: 8,
    goalsConceded: 10,
    ownGoals: 0,
    penaltiesSaved: 0,
    yellowCards: 3,
    redCards: 0,
    saves: 0,
    bonus: 12,
    bps: 345,
    starts: null,
    influenceRank: null,
    influenceRankType: null,
    creativityRank: null,
    creativityRankType: null,
    threatRank: null,
    threatRankType: null,
    ictIndexRank: null,
    ictIndexRankType: null,
    mngWin: null,
    mngDraw: null,
    mngLoss: null,
    mngUnderdogWin: null,
    mngUnderdogDraw: null,
    mngCleanSheets: null,
    mngGoalsScored: null,
  },
  {
    eventId: 3,
    elementId: 3,
    webName: 'De Bruyne',
    elementType: 3,
    elementTypeName: 'MID',
    teamId: 2,
    teamName: 'Manchester City',
    teamShortName: 'MCI',
    value: 125,
    totalPoints: 156,
    form: '7.2',
    influence: '234.5',
    creativity: '189.7',
    threat: '145.8',
    ictIndex: '56.9',
    expectedGoals: '9.87',
    expectedAssists: '14.23',
    expectedGoalInvolvements: '24.10',
    expectedGoalsConceded: '0.0',
    minutes: 1170,
    goalsScored: 8,
    assists: 12,
    cleanSheets: 0,
    goalsConceded: 0,
    ownGoals: 0,
    penaltiesSaved: 0,
    yellowCards: 4,
    redCards: 0,
    saves: 0,
    bonus: 28,
    bps: 567,
    starts: null,
    influenceRank: null,
    influenceRankType: null,
    creativityRank: null,
    creativityRankType: null,
    threatRank: null,
    threatRankType: null,
    ictIndexRank: null,
    ictIndexRankType: null,
    mngWin: null,
    mngDraw: null,
    mngLoss: null,
    mngUnderdogWin: null,
    mngUnderdogDraw: null,
    mngCleanSheets: null,
    mngGoalsScored: null,
  },
  {
    eventId: 3,
    elementId: 4,
    webName: 'Salah',
    elementType: 4,
    elementTypeName: 'FWD',
    teamId: 3,
    teamName: 'Liverpool',
    teamShortName: 'LIV',
    value: 135,
    totalPoints: 187,
    form: '8.6',
    influence: '287.9',
    creativity: '156.4',
    threat: '234.7',
    ictIndex: '67.9',
    expectedGoals: '16.45',
    expectedAssists: '8.76',
    expectedGoalInvolvements: '25.21',
    expectedGoalsConceded: '0.0',
    minutes: 1260,
    goalsScored: 18,
    assists: 9,
    cleanSheets: 0,
    goalsConceded: 0,
    ownGoals: 0,
    penaltiesSaved: 0,
    yellowCards: 2,
    redCards: 0,
    saves: 0,
    bonus: 34,
    bps: 678,
    starts: null,
    influenceRank: null,
    influenceRankType: null,
    creativityRank: null,
    creativityRankType: null,
    threatRank: null,
    threatRankType: null,
    ictIndexRank: null,
    ictIndexRankType: null,
    mngWin: null,
    mngDraw: null,
    mngLoss: null,
    mngUnderdogWin: null,
    mngUnderdogDraw: null,
    mngCleanSheets: null,
    mngGoalsScored: null,
  },
];

// Single fixtures for focused testing
export const singleRawElementFixture: RawFPLElement = rawFPLElementsFixture[0];
export const singlePlayerStatFixture: PlayerStat = transformedPlayerStatsFixture[0];

// Position-specific fixtures
export const gkpPlayerStatFixture: PlayerStat = transformedPlayerStatsFixture[0]; // Ramsdale
export const defPlayerStatFixture: PlayerStat = transformedPlayerStatsFixture[1]; // Saliba
export const midPlayerStatFixture: PlayerStat = transformedPlayerStatsFixture[2]; // De Bruyne
export const fwdPlayerStatFixture: PlayerStat = transformedPlayerStatsFixture[3]; // Salah

// Raw player stat fixtures (without computed fields)
export const rawPlayerStatsFixture: RawPlayerStat[] = transformedPlayerStatsFixture.map((stat) => ({
  eventId: stat.eventId,
  elementId: stat.elementId,
  elementType: stat.elementType,
  totalPoints: stat.totalPoints,
  form: stat.form,
  influence: stat.influence,
  creativity: stat.creativity,
  threat: stat.threat,
  ictIndex: stat.ictIndex,
  expectedGoals: stat.expectedGoals,
  expectedAssists: stat.expectedAssists,
  expectedGoalInvolvements: stat.expectedGoalInvolvements,
  expectedGoalsConceded: stat.expectedGoalsConceded,
  minutes: stat.minutes,
  goalsScored: stat.goalsScored,
  assists: stat.assists,
  cleanSheets: stat.cleanSheets,
  goalsConceded: stat.goalsConceded,
  ownGoals: stat.ownGoals,
  penaltiesSaved: stat.penaltiesSaved,
  yellowCards: stat.yellowCards,
  redCards: stat.redCards,
  saves: stat.saves,
  bonus: stat.bonus,
  bps: stat.bps,
  starts: stat.starts,
  influenceRank: stat.influenceRank,
  influenceRankType: stat.influenceRankType,
  creativityRank: stat.creativityRank,
  creativityRankType: stat.creativityRankType,
  threatRank: stat.threatRank,
  threatRankType: stat.threatRankType,
  ictIndexRank: stat.ictIndexRank,
  ictIndexRankType: stat.ictIndexRankType,
  mngWin: stat.mngWin,
  mngDraw: stat.mngDraw,
  mngLoss: stat.mngLoss,
  mngUnderdogWin: stat.mngUnderdogWin,
  mngUnderdogDraw: stat.mngUnderdogDraw,
  mngCleanSheets: stat.mngCleanSheets,
  mngGoalsScored: stat.mngGoalsScored,
}));

// Invalid/edge case data for error testing
export const invalidRawElementFixture = {
  id: 'invalid', // Wrong type
  element_type: 5, // Invalid position
  team: 999, // Non-existent team
  now_cost: -10, // Invalid price
  web_name: '', // Empty name
  total_points: null, // Should be number
  form: 'invalid-number',
  // Missing many required fields
} as any;

// Database insertion data (matches DB schema)
export const dbPlayerStatInsertFixture = {
  eventId: 3,
  elementId: 1,
  webName: 'Ramsdale',
  elementType: 1,
  elementTypeName: 'GKP',
  teamId: 1,
  teamName: 'Arsenal',
  teamShortName: 'ARS',
  value: 50,
  totalPoints: 42,
  form: '4.2',
  influence: '78.2',
  creativity: '12.4',
  threat: '5.1',
  ictIndex: '9.6',
  expectedGoals: '0.12',
  expectedAssists: '0.45',
  expectedGoalInvolvements: '0.57',
  expectedGoalsConceded: '14.2',
  minutes: 990,
  goalsScored: 0,
  assists: 1,
  cleanSheets: 6,
  goalsConceded: 12,
  ownGoals: 0,
  penaltiesSaved: 1,
  yellowCards: 2,
  redCards: 0,
  saves: 45,
  bonus: 3,
  bps: 156,
  starts: null,
  influenceRank: null,
  influenceRankType: null,
  creativityRank: null,
  creativityRankType: null,
  threatRank: null,
  threatRankType: null,
  ictIndexRank: null,
  ictIndexRankType: null,
  mngWin: null,
  mngDraw: null,
  mngLoss: null,
  mngUnderdogWin: null,
  mngUnderdogDraw: null,
  mngCleanSheets: null,
  mngGoalsScored: null,
  createdAt: new Date(),
  updatedAt: new Date(),
};

// Mock FPL Bootstrap response for integration tests
export const mockBootstrapResponseWithPlayerStatsFixture = {
  events: [
    { id: 1, name: 'Gameweek 1', is_current: false, is_next: false, is_previous: false },
    { id: 2, name: 'Gameweek 2', is_current: false, is_next: false, is_previous: true },
    { id: 3, name: 'Gameweek 3', is_current: true, is_next: false, is_previous: false },
  ],
  teams: [
    { id: 1, name: 'Arsenal', short_name: 'ARS' },
    { id: 2, name: 'Manchester City', short_name: 'MCI' },
    { id: 3, name: 'Liverpool', short_name: 'LIV' },
  ],
  elements: rawFPLElementsFixture,
  element_types: [
    { id: 1, plural_name: 'Goalkeepers', singular_name: 'Goalkeeper' },
    { id: 2, plural_name: 'Defenders', singular_name: 'Defender' },
    { id: 3, plural_name: 'Midfielders', singular_name: 'Midfielder' },
    { id: 4, plural_name: 'Forwards', singular_name: 'Forward' },
  ],
  total_players: 6051985,
  game_settings: {},
  phases: [],
};

// Redis cache data format
export const playerStatsCacheFixture = {
  key: 'PlayerStats:2526:3',
  value: JSON.stringify(transformedPlayerStatsFixture),
  ttl: 1800, // 30 minutes
};

// Expected API response format
export const playerStatsApiResponseFixture = {
  success: true,
  data: transformedPlayerStatsFixture,
  count: transformedPlayerStatsFixture.length,
  timestamp: new Date().toISOString(),
};

// Test scenarios data
export const testScenarios = {
  empty: {
    raw: [],
    transformed: [],
    description: 'Empty player stats array',
  },
  single: {
    raw: [rawFPLElementsFixture[0]],
    transformed: [transformedPlayerStatsFixture[0]],
    description: 'Single player stat',
  },
  multiple: {
    raw: rawFPLElementsFixture,
    transformed: transformedPlayerStatsFixture,
    description: 'Multiple player stats',
  },
  invalid: {
    raw: [invalidRawElementFixture],
    description: 'Invalid player stat data',
  },
  byPosition: {
    gkp: transformedPlayerStatsFixture.filter((stat) => stat.elementType === 1),
    def: transformedPlayerStatsFixture.filter((stat) => stat.elementType === 2),
    mid: transformedPlayerStatsFixture.filter((stat) => stat.elementType === 3),
    fwd: transformedPlayerStatsFixture.filter((stat) => stat.elementType === 4),
    description: 'Player stats by position',
  },
  byTeam: {
    arsenal: transformedPlayerStatsFixture.filter((stat) => stat.teamId === 1),
    city: transformedPlayerStatsFixture.filter((stat) => stat.teamId === 2),
    liverpool: transformedPlayerStatsFixture.filter((stat) => stat.teamId === 3),
    description: 'Player stats by team',
  },
};

// Analytics fixtures for top performers
export const topPerformersFixture = {
  GKP: [gkpPlayerStatFixture],
  DEF: [defPlayerStatFixture],
  MID: [midPlayerStatFixture],
  FWD: [fwdPlayerStatFixture],
};

// Player stats analytics fixture
export const playerStatsAnalyticsFixture = {
  totalCount: 4,
  latestEventId: 3,
  countsByPosition: {
    GKP: 1,
    DEF: 1,
    MID: 1,
    FWD: 1,
  },
};

// Test data generators
export const generatePlayerStat = (overrides: Partial<PlayerStat> = {}): PlayerStat => ({
  eventId: 3,
  elementId: 1,
  webName: 'Test Player',
  elementType: 1,
  elementTypeName: 'GKP',
  teamId: 1,
  teamName: 'Test Team',
  teamShortName: 'TST',
  value: 50,
  totalPoints: 10,
  form: '3.0',
  influence: '50.0',
  creativity: '25.0',
  threat: '10.0',
  ictIndex: '8.5',
  expectedGoals: '0.5',
  expectedAssists: '0.2',
  expectedGoalInvolvements: '0.7',
  expectedGoalsConceded: '5.0',
  minutes: 90,
  goalsScored: 0,
  assists: 0,
  cleanSheets: 1,
  goalsConceded: 1,
  ownGoals: 0,
  penaltiesSaved: 0,
  yellowCards: 0,
  redCards: 0,
  saves: 3,
  bonus: 0,
  bps: 20,
  starts: null,
  influenceRank: null,
  influenceRankType: null,
  creativityRank: null,
  creativityRankType: null,
  threatRank: null,
  threatRankType: null,
  ictIndexRank: null,
  ictIndexRankType: null,
  mngWin: null,
  mngDraw: null,
  mngLoss: null,
  mngUnderdogWin: null,
  mngUnderdogDraw: null,
  mngCleanSheets: null,
  mngGoalsScored: null,
  ...overrides,
});

export const generatePlayerStats = (count: number, eventId: EventId = 3): PlayerStat[] => {
  return Array.from({ length: count }, (_, index) =>
    generatePlayerStat({
      elementId: index + 1,
      eventId,
      webName: `Player ${index + 1}`,
      elementType: ((index % 4) + 1) as ElementTypeId,
      elementTypeName: ['GKP', 'DEF', 'MID', 'FWD'][index % 4] as 'GKP' | 'DEF' | 'MID' | 'FWD',
      teamId: (index % 3) + 1,
      teamName: ['Arsenal', 'Manchester City', 'Liverpool'][index % 3],
      teamShortName: ['ARS', 'MCI', 'LIV'][index % 3],
      value: 40 + index * 5,
      totalPoints: Math.floor(Math.random() * 200),
    }),
  );
};

// Edge case fixtures for testing validation
export const edgeCaseFixtures = {
  maxValues: generatePlayerStat({
    elementId: 999,
    value: 150, // Max price
    totalPoints: 500, // Very high points
    minutes: 3420, // Full season minutes
    goalsScored: 50, // Unrealistic but valid
  }),
  minValues: generatePlayerStat({
    elementId: 1,
    value: 35, // Min price
    totalPoints: 0, // No points
    minutes: 0, // No minutes
    goalsScored: 0,
  }),
  nullValues: generatePlayerStat({
    totalPoints: null,
    form: null,
    influence: null,
    creativity: null,
    threat: null,
    ictIndex: null,
    expectedGoals: null,
    expectedAssists: null,
    expectedGoalInvolvements: null,
    expectedGoalsConceded: null,
    minutes: null,
    goalsScored: null,
    assists: null,
    cleanSheets: null,
    goalsConceded: null,
  }),
};
