// Schema for Fantasy Premier League (FPL) data management system
// Database: PostgreSQL with Prisma ORM

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---Tables---

model Event {
  id                  Int      @id
  name                String   @map("name")
  deadlineTime        DateTime @map("deadline_time")
  averageEntryScore   Int      @default(0) @map("average_entry_score")
  finished            Boolean  @default(false)
  dataChecked         Boolean  @default(false) @map("data_checked")
  highestScore        Int      @default(0) @map("highest_score")
  highestScoringEntry Int      @default(0) @map("highest_scoring_entry")
  isPrevious          Boolean  @default(false) @map("is_previous")
  isCurrent           Boolean  @default(false) @map("is_current")
  isNext              Boolean  @default(false) @map("is_next")
  cupLeaguesCreated   Boolean  @default(false) @map("cup_leagues_created")
  h2hKoMatchesCreated Boolean  @default(false) @map("h2h_ko_matches_created")
  rankedCount         Int      @default(0) @map("ranked_count")
  chipPlays           Json?    @map("chip_plays")
  mostSelected        Int?     @map("most_selected")
  mostTransferredIn   Int?     @map("most_transferred_in")
  mostCaptained       Int?     @map("most_captained")
  mostViceCaptained   Int?     @map("most_vice_captained")
  topElement          Int?     @map("top_element")
  topElementInfo      Json?    @map("top_element_info")
  transfersMade       Int      @default(0) @map("transfers_made")
  createdAt           DateTime @default(now()) @map("created_at")

  @@map("events")
}

model Phase {
  id           Int      @id
  name         String   @map("name")
  startEvent   Int      @map("start_event")
  stopEvent    Int      @map("stop_event")
  highestScore Int?     @map("highest_score")
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("phases")
}

model Team {
  id        Int      @id
  code      Int      @unique
  name      String   @map("name")
  shortName String   @map("short_name")
  strength  Int      @map("strength")
  position  Int      @default(0) @map("position")
  points    Int      @default(0) @map("points")
  win       Int      @default(0) @map("win")
  draw      Int      @default(0) @map("draw")
  loss      Int      @default(0) @map("loss")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("teams")
}

model Player {
  id         Int      @id @map("id")
  code       Int      @unique @map("code")
  type       Int      @map("type")
  teamId     Int      @map("team_id")
  price      Int      @default(0) @map("price")
  startPrice Int      @default(0) @map("start_price")
  firstName  String?  @map("first_name")
  secondName String?  @map("second_name")
  webName    String   @map("web_name")
  createdAt  DateTime @default(now()) @map("created_at")

  @@map("players")
}

model PlayerValue {
  id          Int             @id @default(autoincrement())
  elementId   Int             @map("element_id")
  elementType Int             @map("element_type")
  eventId     Int             @map("event_id")
  value       Int             @map("value")
  changeDate  String          @map("change_date") @db.Char(8)
  changeType  ValueChangeType @map("change_type")
  lastValue   Int             @default(0) @map("last_value")
  createdAt   DateTime        @default(now()) @map("created_at")

  @@unique([elementId, changeDate], name: "unique_player_value")
  @@index([elementId], name: "idx_player_values_element_id")
  @@index([changeDate], name: "idx_player_values_change_date")
  @@map("player_values")
}

model PlayerValueTrack {
  id                       Int      @id @default(autoincrement())
  hourIndex                Int      @map("hour_index")
  date                     String   @map("date") @db.Char(8)
  eventId                  Int      @map("event_id")
  elementId                Int      @map("element_id")
  elementType              Int      @map("element_type")
  teamId                   Int      @map("team_id")
  chanceOfPlayingThisRound Int?     @map("chance_of_playing_this_round")
  chanceOfPlayingNextRound Int?     @map("chance_of_playing_next_round")
  transfersIn              Int      @map("transfers_in")
  transfersOut             Int      @map("transfers_out")
  transfersInEvent         Int      @map("transfers_in_event")
  transfersOutEvent        Int      @map("transfers_out_event")
  selectedBy               Int      @map("selected_by")
  value                    Int      @default(0) @map("value")
  createdAt                DateTime @default(now()) @map("created_at")

  @@unique([elementId, date, hourIndex], name: "unique_player_value_track")
  @@index([date, hourIndex], name: "idx_player_value_track_date_hour_index")
  @@index([elementId], name: "idx_player_value_track_element_id")
  @@index([eventId], name: "idx_player_value_track_event_id")
  @@map("player_value_tracks")
}

model PlayerStat {
  id          Int  @id @default(autoincrement())
  eventId     Int  @map("event_id")
  elementId   Int  @map("element_id")
  elementType Int  @map("element_type")
  totalPoints Int? @map("total_points")

  // Performance metrics
  form                     Float?   @map("form")
  influence                Float?   @map("influence")
  creativity               Float?   @map("creativity")
  threat                   Float?   @map("threat")
  ictIndex                 Float?   @map("ict_index")
  expectedGoals            Decimal? @map("expected_goals") @db.Decimal(10, 2)
  expectedAssists          Decimal? @map("expected_assists") @db.Decimal(10, 2)
  expectedGoalInvolvements Decimal? @map("expected_goal_involvements") @db.Decimal(10, 2)
  expectedGoalsConceded    Decimal? @map("expected_goals_conceded") @db.Decimal(10, 2)

  // Match statistics
  minutes        Int? @map("minutes")
  goalsScored    Int? @map("goals_scored")
  assists        Int? @map("assists")
  cleanSheets    Int? @map("clean_sheets")
  goalsConceded  Int? @map("goals_conceded")
  ownGoals       Int? @map("own_goals")
  penaltiesSaved Int? @map("penalties_saved")

  // Additional statistics
  yellowCards Int? @default(0) @map("yellow_cards")
  redCards    Int? @default(0) @map("red_cards")
  saves       Int? @default(0) @map("saves")
  bonus       Int? @default(0) @map("bonus")
  bps         Int? @default(0) @map("bps")
  starts      Int? @default(0) @map("starts")

  // Rank statistics
  influenceRank      Int? @map("influence_rank")
  influenceRankType  Int? @map("influence_rank_type")
  creativityRank     Int? @map("creativity_rank")
  creativityRankType Int? @map("creativity_rank_type")
  threatRank         Int? @map("threat_rank")
  threatRankType     Int? @map("threat_rank_type")
  ictIndexRank       Int? @map("ict_index_rank")
  ictIndexRankType   Int? @map("ict_index_rank_type")

  // Manager stats
  mngWin          Int? @map("mng_win")
  mngDraw         Int? @map("mng_draw")
  mngLoss         Int? @map("mng_loss")
  mngUnderdogWin  Int? @map("mng_underdog_win")
  mngUnderdogDraw Int? @map("mng_underdog_draw")
  mngCleanSheets  Int? @map("mng_clean_sheets")
  mngGoalsScored  Int? @map("mng_goals_scored")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@unique([eventId, elementId], name: "unique_event_element")
  @@index([elementId], name: "idx_player_stats_element_id")
  @@index([eventId], name: "idx_player_stats_event_id")
  @@map("player_stats")
}

model EventFixture {
  id              Int       @id
  code            Int       @unique @map("code")
  eventId         Int       @map("event_id")
  kickoffTime     DateTime? @map("kickoff_time") @db.Timestamptz
  started         Boolean   @default(false) @map("started")
  finished        Boolean   @default(false) @map("finished")
  minutes         Int       @default(0) @map("minutes")
  teamH           Int?      @map("team_h")
  teamHDifficulty Int?      @map("team_h_difficulty")
  teamHScore      Int?      @map("team_h_score")
  teamA           Int?      @map("team_a")
  teamADifficulty Int?      @map("team_a_difficulty")
  teamAScore      Int?      @map("team_a_score")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")

  @@index([eventId], name: "idx_event_fixtures_event_id")
  @@index([teamH], name: "idx_event_fixtures_team_h_id")
  @@index([teamA], name: "idx_event_fixtures_team_a_id")
  @@map("event_fixtures")
}

model EventLive {
  id                       Int      @id @default(autoincrement())
  eventId                  Int      @map("event_id")
  elementId                Int      @map("element_id")
  minutes                  Int?     @map("minutes")
  goalsScored              Int?     @map("goals_scored")
  assists                  Int?     @map("assists")
  cleanSheets              Int?     @map("clean_sheets")
  goalsConceded            Int?     @map("goals_conceded")
  ownGoals                 Int?     @map("own_goals")
  penaltiesSaved           Int?     @map("penalties_saved")
  penaltiesMissed          Int?     @map("penalties_missed")
  yellowCards              Int?     @map("yellow_cards")
  redCards                 Int?     @map("red_cards")
  saves                    Int?     @map("saves")
  bonus                    Int?     @map("bonus")
  bps                      Int?     @map("bps")
  starts                   Boolean? @map("starts")
  expectedGoals            Decimal? @map("expected_goals") @db.Decimal(10, 2)
  expectedAssists          Decimal? @map("expected_assists") @db.Decimal(10, 2)
  expectedGoalInvolvements Decimal? @map("expected_goal_involvements") @db.Decimal(10, 2)
  expectedGoalsConceded    Decimal? @map("expected_goals_conceded") @db.Decimal(10, 2)
  mngWin                   Int?     @map("mng_win")
  mngDraw                  Int?     @map("mng_draw")
  mngLoss                  Int?     @map("mng_loss")
  mngUnderdogWin           Int?     @map("mng_underdog_win")
  mngUnderdogDraw          Int?     @map("mng_underdog_draw")
  mngCleanSheets           Int?     @map("mng_clean_sheets")
  mngGoalsScored           Int?     @map("mng_goals_scored")
  inDreamTeam              Boolean? @map("in_dream_team")
  totalPoints              Int      @default(0) @map("total_points")
  createdAt                DateTime @default(now()) @map("created_at")
  updatedAt                DateTime @updatedAt @map("updated_at")

  @@unique([eventId, elementId], name: "unique_event_element_live")
  @@index([elementId], name: "idx_event_live_element_id")
  @@index([eventId], name: "idx_event_live_event_id")
  @@map("event_lives")
}

model EventLiveExplain {
  id                    Int      @id @default(autoincrement())
  eventId               Int      @map("event_id")
  elementId             Int      @map("element_id")
  bps                   Int?     @map("bps")
  bonus                 Int?     @map("bonus")
  minutes               Int?     @map("minutes")
  minutesPoints         Int?     @map("minutes_points")
  goalsScored           Int?     @map("goals_scored")
  goalsScoredPoints     Int?     @map("goals_scored_points")
  assists               Int?     @map("assists")
  assistsPoints         Int?     @map("assists_points")
  cleanSheets           Int?     @map("clean_sheets")
  cleanSheetsPoints     Int?     @map("clean_sheets_points")
  goalsConceded         Int?     @map("goals_conceded")
  goalsConcededPoints   Int?     @map("goals_conceded_points")
  ownGoals              Int?     @map("own_goals")
  ownGoalsPoints        Int?     @map("own_goals_points")
  penaltiesSaved        Int?     @map("penalties_saved")
  penaltiesSavedPoints  Int?     @map("penalties_saved_points")
  penaltiesMissed       Int?     @map("penalties_missed")
  penaltiesMissedPoints Int?     @map("penalties_missed_points")
  yellowCards           Int?     @map("yellow_cards")
  yellowCardsPoints     Int?     @map("yellow_cards_points")
  redCards              Int?     @map("red_cards")
  redCardsPoints        Int?     @map("red_cards_points")
  saves                 Int?     @map("saves")
  savesPoints           Int?     @map("saves_points")
  mngWin                Int?     @map("mng_win")
  mngWinPoints          Int?     @map("mng_win_points")
  mngDraw               Int?     @map("mng_draw")
  mngDrawPoints         Int?     @map("mng_draw_points")
  mngLoss               Int?     @map("mng_loss")
  mngLossPoints         Int?     @map("mng_loss_points")
  mngUnderdogWin        Int?     @map("mng_underdog_win")
  mngUnderdogWinPoints  Int?     @map("mng_underdog_win_points")
  mngUnderdogDraw       Int?     @map("mng_underdog_draw")
  mngUnderdogDrawPoints Int?     @map("mng_underdog_draw_points")
  mngCleanSheets        Int?     @map("mng_clean_sheets")
  mngCleanSheetsPoints  Int?     @map("mng_clean_sheets_points")
  mngGoalsScored        Int?     @map("mng_goals_scored")
  mngGoalsScoredPoints  Int?     @map("mng_goals_scored_points")
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")

  @@unique([elementId, eventId], name: "unique_event_element_live_explain")
  @@index([elementId], name: "idx_event_live_explain_element_id")
  @@index([eventId], name: "idx_event_live_explain_event_id")
  @@map("event_live_explains")
}

model EntryInfo {
  id                Int      @id @map("id")
  entryName         String   @map("entry_name")
  playerName        String   @map("player_name")
  region            String?  @map("region")
  startedEvent      Int?     @map("started_event")
  overallPoints     Int?     @map("overall_points")
  overallRank       Int?     @map("overall_rank")
  bank              Int?     @map("bank")
  teamValue         Int?     @map("team_value")
  totalTransfers    Int?     @map("total_transfers")
  lastEntryName     String?  @map("last_entry_name")
  lastOverallPoints Int?     @map("last_overall_points")
  lastOverallRank   Int?     @map("last_overall_rank")
  lastTeamValue     Int?     @map("last_team_value")
  usedEntryNames    String[] @default([]) @map("used_entry_names")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@map("entry_infos")
}

model EntryLeagueInfo {
  id            Int        @id @default(autoincrement())
  entryId       Int        @map("entry_id")
  leagueId      Int        @map("league_id")
  leagueName    String     @map("league_name")
  leagueType    LeagueType @map("league_type")
  startedEvent  Int?       @map("started_event")
  entryRank     Int?       @map("entry_rank")
  entryLastRank Int?       @map("entry_last_rank")
  createdAt     DateTime   @default(now()) @map("created_at")
  updatedAt     DateTime   @updatedAt @map("updated_at")

  @@unique([entryId, leagueId], name: "unique_entry_league_info")
  @@index([entryId], name: "idx_entry_league_info_entry_id")
  @@map("entry_league_infos")
}

model EntryHistoryInfo {
  id          Int      @id @default(autoincrement())
  entryId     Int      @map("entry_id")
  season      String   @map("season") @db.Char(4)
  totalPoints Int      @default(0) @map("total_points")
  overallRank Int      @default(0) @map("overall_rank")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@unique([entryId, season], name: "unique_entry_season_history")
  @@index([entryId], name: "idx_entry_history_info_entry_id")
  @@map("entry_history_infos")
}

model EntryEventPick {
  id            Int      @id @default(autoincrement())
  entryId       Int      @map("entry_id")
  eventId       Int      @map("event_id")
  chip          Chip     @map("chip")
  picks         Json?    @map("picks")
  transfers     Int?     @map("transfers")
  transfersCost Int?     @map("transfers_cost")
  createdAt     DateTime @default(now()) @map("created_at")

  @@unique([entryId, eventId], name: "unique_entry_event_pick")
  @@index([entryId], name: "idx_entry_event_picks_entry_id")
  @@map("entry_event_picks")
}

model EntryEventTransfer {
  id               Int      @id @default(autoincrement())
  entryId          Int      @map("entry_id")
  eventId          Int      @map("event_id")
  elementInId      Int?     @map("element_in_id")
  elementInCost    Int?     @map("element_in_cost")
  elementInPoints  Int?     @map("element_in_points")
  elementOutId     Int?     @map("element_out_id")
  elementOutCost   Int?     @map("element_out_cost")
  elementOutPoints Int?     @map("element_out_points")
  transferTime     DateTime @map("transfer_time")
  createdAt        DateTime @default(now()) @map("created_at")

  @@unique([entryId, eventId], name: "unique_entry_event_transfer")
  @@index([entryId], name: "idx_entry_event_transfers_entry_id")
  @@map("entry_event_transfers")
}

model EntryEventResult {
  id                 Int      @id @default(autoincrement())
  entryId            Int      @map("entry_id")
  eventId            Int      @map("event_id")
  eventPoints        Int      @default(0) @map("event_points")
  eventTransfers     Int      @default(0) @map("event_transfers")
  eventTransfersCost Int      @default(0) @map("event_transfers_cost")
  eventNetPoints     Int      @default(0) @map("event_net_points")
  eventBenchPoints   Int?     @map("event_bench_points")
  eventAutoSubPoints Int?     @map("event_auto_sub_points")
  eventRank          Int?     @map("event_rank")
  eventChip          Chip?    @map("event_chip")
  eventPlayedCaptain Int?     @map("event_played_captain")
  eventCaptainPoints Int?     @map("event_captain_points")
  eventPicks         Json?    @map("event_picks")
  eventAutoSub       Json?    @map("event_auto_sub")
  overallPoints      Int      @default(0) @map("overall_points")
  overallRank        Int      @default(0) @map("overall_rank")
  teamValue          Int?     @map("team_value")
  bank               Int?     @map("bank")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  @@index([entryId], name: "idx_entry_event_results_entry_id")
  @@index([eventId], name: "idx_entry_event_results_event_id")
  @@map("entry_event_results")
}

// ---Enums---

enum Chip {
  None
  Wildcard
  FreeHit
  TripleCaptain
  BenchBoost
  Manager
}

enum ValueChangeType {
  Start
  Rise
  Fall
}

enum LeagueType {
  Classic
  H2H
}

enum CupResult {
  Win
  Loss
}

// ---Views---

model LeagueEventResult {
  id                   Int        @id @default(autoincrement())
  event                Int        @map("event")
  leagueId             Int        @map("league_id")
  leagueType           LeagueType @map("league_type")
  leagueName           String     @map("league_name")
  entry                Int        @map("entry")
  entryName            String     @map("entry_name")
  playerName           String     @map("player_name")
  overallPoints        Int        @default(0) @map("overall_points")
  overallRank          Int        @default(0) @map("overall_rank")
  teamValue            Int?       @map("team_value")
  bank                 Int?       @map("bank")
  eventPoints          Int        @default(0) @map("event_points")
  eventTransfers       Int?       @map("event_transfers")
  eventNetPoints       Int        @default(0) @map("event_net_points")
  eventBenchPoints     Int?       @map("event_bench_points")
  eventAutoSubPoints   Int?       @map("event_auto_sub_points")
  eventRank            Int?       @map("event_rank")
  eventChip            Chip?      @map("event_chip")
  position1            Int?       @map("position1")
  position2            Int?       @map("position2")
  position3            Int?       @map("position3")
  position4            Int?       @map("position4")
  position5            Int?       @map("position5")
  position6            Int?       @map("position6")
  position7            Int?       @map("position7")
  position8            Int?       @map("position8")
  position9            Int?       @map("position9")
  position10           Int?       @map("position10")
  position11           Int?       @map("position11")
  position12           Int?       @map("position12")
  position13           Int?       @map("position13")
  position14           Int?       @map("position14")
  position15           Int?       @map("position15")
  captain              Int?       @map("captain")
  captainPoints        Int?       @map("captain_points")
  captainBlank         Boolean?   @map("captain_blank")
  captainSelected      String?    @map("captain_selected")
  viceCaptain          Int?       @map("vice_captain")
  viceCaptainPoints    Int?       @map("vice_captain_points")
  viceCaptainBlank     Boolean?   @map("vice_captain_blank")
  viceCaptainSelected  String?    @map("vice_captain_selected")
  playedCaptain        Int?       @map("played_captain")
  highestScore         Int?       @map("highest_score")
  highestScorePoints   Int?       @map("highest_score_points")
  highestScoreBlank    Boolean?   @map("highest_score_blank")
  highestScoreSelected String?    @map("highest_score_selected")
  createdAt            DateTime   @default(now()) @map("created_at")
  updatedAt            DateTime   @updatedAt @map("updated_at")
}
