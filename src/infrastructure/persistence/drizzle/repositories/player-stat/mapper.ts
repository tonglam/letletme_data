import { DbPlayerStat, DbPlayerStatCreateInput } from 'repository/player-stat/types';
import { ElementTypeId } from 'types/base.type';
import { EventId } from 'types/domain/event.type';
import { RawPlayerStat } from 'types/domain/player-stat.type';
import { PlayerId } from 'types/domain/player.type';

export const mapDbPlayerStatToDomain = (dbPlayerStat: DbPlayerStat): RawPlayerStat => ({
  eventId: dbPlayerStat.eventId as EventId,
  elementId: dbPlayerStat.elementId as PlayerId,
  elementType: dbPlayerStat.elementType as ElementTypeId,
  totalPoints: dbPlayerStat.totalPoints ?? null,
  form: dbPlayerStat.form ?? null,
  influence: dbPlayerStat.influence ?? null,
  creativity: dbPlayerStat.creativity ?? null,
  threat: dbPlayerStat.threat ?? null,
  ictIndex: dbPlayerStat.ictIndex ?? null,
  expectedGoals: dbPlayerStat.expectedGoals ?? null,
  expectedAssists: dbPlayerStat.expectedAssists ?? null,
  expectedGoalInvolvements: dbPlayerStat.expectedGoalInvolvements ?? null,
  expectedGoalsConceded: dbPlayerStat.expectedGoalsConceded ?? null,
  minutes: dbPlayerStat.minutes ?? null,
  goalsScored: dbPlayerStat.goalsScored ?? null,
  assists: dbPlayerStat.assists ?? null,
  cleanSheets: dbPlayerStat.cleanSheets ?? null,
  goalsConceded: dbPlayerStat.goalsConceded ?? null,
  ownGoals: dbPlayerStat.ownGoals ?? null,
  penaltiesSaved: dbPlayerStat.penaltiesSaved ?? null,
  yellowCards: dbPlayerStat.yellowCards ?? null,
  redCards: dbPlayerStat.redCards ?? null,
  saves: dbPlayerStat.saves ?? null,
  bonus: dbPlayerStat.bonus ?? null,
  bps: dbPlayerStat.bps ?? null,
  starts: dbPlayerStat.starts ?? null,
  influenceRank: dbPlayerStat.influenceRank ?? null,
  influenceRankType: dbPlayerStat.influenceRankType ?? null,
  creativityRank: dbPlayerStat.creativityRank ?? null,
  creativityRankType: dbPlayerStat.creativityRankType ?? null,
  threatRank: dbPlayerStat.threatRank ?? null,
  threatRankType: dbPlayerStat.threatRankType ?? null,
  ictIndexRank: dbPlayerStat.ictIndexRank ?? null,
  ictIndexRankType: dbPlayerStat.ictIndexRankType ?? null,
  mngWin: dbPlayerStat.mngWin ?? null,
  mngDraw: dbPlayerStat.mngDraw ?? null,
  mngLoss: dbPlayerStat.mngLoss ?? null,
  mngUnderdogWin: dbPlayerStat.mngUnderdogWin ?? null,
  mngUnderdogDraw: dbPlayerStat.mngUnderdogDraw ?? null,
  mngCleanSheets: dbPlayerStat.mngCleanSheets ?? null,
  mngGoalsScored: dbPlayerStat.mngGoalsScored ?? null,
});

export const mapDomainStatToDbCreate = (domainStat: RawPlayerStat): DbPlayerStatCreateInput => ({
  eventId: domainStat.eventId,
  elementId: domainStat.elementId,
  elementType: domainStat.elementType,
  totalPoints: domainStat.totalPoints,
  form: domainStat.form,
  influence: domainStat.influence,
  creativity: domainStat.creativity,
  threat: domainStat.threat,
  ictIndex: domainStat.ictIndex,
  expectedGoals: domainStat.expectedGoals ?? null,
  expectedAssists: domainStat.expectedAssists ?? null,
  expectedGoalInvolvements: domainStat.expectedGoalInvolvements ?? null,
  expectedGoalsConceded: domainStat.expectedGoalsConceded ?? null,
  minutes: domainStat.minutes,
  goalsScored: domainStat.goalsScored,
  assists: domainStat.assists,
  cleanSheets: domainStat.cleanSheets,
  goalsConceded: domainStat.goalsConceded,
  ownGoals: domainStat.ownGoals,
  penaltiesSaved: domainStat.penaltiesSaved,
  yellowCards: domainStat.yellowCards,
  redCards: domainStat.redCards,
  saves: domainStat.saves,
  bonus: domainStat.bonus,
  bps: domainStat.bps,
  starts: domainStat.starts,
  influenceRank: domainStat.influenceRank,
  influenceRankType: domainStat.influenceRankType,
  creativityRank: domainStat.creativityRank,
  creativityRankType: domainStat.creativityRankType,
  threatRank: domainStat.threatRank,
  threatRankType: domainStat.threatRankType,
  ictIndexRank: domainStat.ictIndexRank,
  ictIndexRankType: domainStat.ictIndexRankType,
});
