import {
  EventLiveCreateInput,
  DbEventLive,
  DbEventLiveCreateInput,
} from 'repository/event-live/types';
import { RawEventLive } from 'types/domain/event-live.type';
import { EventId } from 'types/domain/event.type';
import { PlayerId } from 'types/domain/player.type';

export const mapDbEventLiveToDomain = (dbEventLive: DbEventLive): RawEventLive => ({
  eventId: dbEventLive.eventId as EventId,
  elementId: dbEventLive.elementId as PlayerId,
  minutes: dbEventLive.minutes,
  goalsScored: dbEventLive.goalsScored,
  assists: dbEventLive.assists,
  cleanSheets: dbEventLive.cleanSheets,
  goalsConceded: dbEventLive.goalsConceded,
  ownGoals: dbEventLive.ownGoals,
  penaltiesSaved: dbEventLive.penaltiesSaved,
  penaltiesMissed: dbEventLive.penaltiesMissed,
  yellowCards: dbEventLive.yellowCards,
  redCards: dbEventLive.redCards,
  saves: dbEventLive.saves,
  bonus: dbEventLive.bonus,
  bps: dbEventLive.bps,
  starts: dbEventLive.starts,
  expectedGoals: dbEventLive.expectedGoals,
  expectedAssists: dbEventLive.expectedAssists,
  expectedGoalInvolvements: dbEventLive.expectedGoalInvolvements,
  expectedGoalsConceded: dbEventLive.expectedGoalsConceded,
  mngWin: dbEventLive.mngWin,
  mngDraw: dbEventLive.mngDraw,
  mngLoss: dbEventLive.mngLoss,
  mngUnderdogWin: dbEventLive.mngUnderdogWin,
  mngUnderdogDraw: dbEventLive.mngUnderdogDraw,
  mngCleanSheets: dbEventLive.mngCleanSheets,
  mngGoalsScored: dbEventLive.mngGoalsScored,
  inDreamTeam: dbEventLive.inDreamTeam,
  totalPoints: dbEventLive.totalPoints,
});

export const mapDomainEventLiveToDbCreate = (
  domainEventLive: EventLiveCreateInput,
): DbEventLiveCreateInput => ({
  eventId: domainEventLive.eventId,
  elementId: domainEventLive.elementId,
  minutes: domainEventLive.minutes,
  goalsScored: domainEventLive.goalsScored,
  assists: domainEventLive.assists,
  cleanSheets: domainEventLive.cleanSheets,
  goalsConceded: domainEventLive.goalsConceded,
  ownGoals: domainEventLive.ownGoals,
  penaltiesSaved: domainEventLive.penaltiesSaved,
  penaltiesMissed: domainEventLive.penaltiesMissed,
  yellowCards: domainEventLive.yellowCards,
  redCards: domainEventLive.redCards,
  saves: domainEventLive.saves,
  bonus: domainEventLive.bonus,
  bps: domainEventLive.bps,
  starts: domainEventLive.starts,
  expectedGoals: domainEventLive.expectedGoals,
  expectedAssists: domainEventLive.expectedAssists,
  expectedGoalInvolvements: domainEventLive.expectedGoalInvolvements,
  expectedGoalsConceded: domainEventLive.expectedGoalsConceded,
  mngWin: domainEventLive.mngWin,
  mngDraw: domainEventLive.mngDraw,
  mngLoss: domainEventLive.mngLoss,
  mngUnderdogWin: domainEventLive.mngUnderdogWin,
  mngUnderdogDraw: domainEventLive.mngUnderdogDraw,
  mngCleanSheets: domainEventLive.mngCleanSheets,
  mngGoalsScored: domainEventLive.mngGoalsScored,
  inDreamTeam: domainEventLive.inDreamTeam,
  totalPoints: domainEventLive.totalPoints,
});
